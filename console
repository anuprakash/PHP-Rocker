#!/usr/bin/env php
<?php
/**
 * PHP Rocker - Console
 * ---------------------------------
 * Console program for managing remote servers running
 * on Rocker. Symlink this file to your /bin/ directory
 *
 * @package rocker/server
 * @author Victor Jonsson (http://victorjonsson.se)
 * @license MIT license (http://opensource.org/licenses/MIT)
 */

// Check that we're running a console
if( isset($_SERVER['REMOTE_ADDR']) )
    die('cli only....');
elseif( empty($_SERVER['HOME']) )
    die('home path missing...');
elseif( !is_writable($_SERVER['HOME']) )
    die('Your home directory has to be writeable...');


// Load cli utilities and vendors
require __DIR__.'/vendor/autoload.php';
\cli\register_autoload();

// Setup error handler
\Rocker\Utils\ErrorHandler::init(array('mode'=>'production'));

// Load config
$config = require __DIR__.'/config.php';

// Shorthand for \cli\line()
function _($str) { \cli\line($str); }

// Parse flags and args
list($flags, $args, $method) = \Rocker\Console\Utils::parseInput($argv, $config);

try {
    if( $method !== false ) {

        /* @var \Rocker\Console\Method\MethodInterface $method */
        if( in_array('-h', $flags) || in_array('-help', $flags) || in_array('help', $flags)) {
            $method->help();
            _('');
        } else {
            try {
                $method->call($args, $flags);
            } catch(\InvalidArgumentException $e) {
                _('%rInvalid argument ('.$e->getMessage().')%n');
            }
        }
    }
    else {
        _('PHP Rocker (client v'.\Rocker\Server::VERSION.')');
        \Rocker\Console\Utils::outputAvailableMethods($config);
    }
} catch(\Exception $e) {
    _('%r%_Exception ('.get_class($e).')%n');
    _('%r'.$e->getMessage());
    _($e->getTraceAsString().'%n');
}